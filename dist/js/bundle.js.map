{"version":3,"file":"js/bundle.js","mappings":"mBAIAA,OAAOC,iBAAiB,oBAAoB,MCH5C,WACI,MAAMC,EAAMC,SAASC,cAAc,QAC7BC,EAASF,SAASC,cAAc,kBAChCE,EAAWH,SAASI,iBAAiB,mBAG3C,SAASC,EAAYC,GACjBA,EAAMC,kBACFV,OAAOW,YAAc,KAAqB,cAAdF,EAAMG,KAClCC,KAAKC,UAAUC,IAAI,yBACZf,OAAOW,YAAc,KAAqB,YAAdF,EAAMG,KACzCC,KAAKC,UAAUE,OAAO,yBACfhB,OAAOW,WAAa,KAAqB,cAAdF,EAAMG,KACxCC,KAAKC,UAAUC,IAAI,yBACZf,OAAOW,WAAa,KAAqB,cAAdF,EAAMG,MACxCC,KAAKC,UAAUE,OAAO,wBAE9B,CAkBA,SAASC,EAAcR,GACnBA,EAAMC,kBACNL,EAAOS,UAAUI,OAAO,wBAfxBf,SAASgB,KAAKL,UAAUI,OAAO,gBAGnC,WACIhB,EAAIkB,MAAMC,WAAa,OACvBnB,EAAIY,UAAUI,OAAO,aACrB,IAAII,EAAQC,YAAW,KACnBrB,EAAIkB,MAAMC,WAAa,KACvBG,aAAaF,EAAM,GACpB,IACP,CAOIG,EACJ,CApCmB,CAAC,aAAc,aAAc,aAAc,YAenDC,SAAQC,GAAKrB,EAASoB,SAAQE,GAAQA,EAAK3B,iBAAiB0B,EAAGnB,OAwB1EH,EAAOJ,iBAAiB,QAASgB,GACjCjB,OAAOC,iBAAiB,UAAWQ,IAC3BP,EAAIY,UAAUe,SAAS,cACvBZ,EAAcR,EAClB,GAER,ED3CIP,GEPJ,WACI,MAAM4B,EAAa3B,SAASI,iBAAiB,YAG7C,SAASC,EAAYC,GACjBA,EAAMC,kBACFV,OAAOW,YAAc,KAAqB,cAAdF,EAAMG,KAClCC,KAAKC,UAAUC,IAAI,iBACZf,OAAOW,YAAc,KAAqB,YAAdF,EAAMG,KACzCC,KAAKC,UAAUE,OAAO,iBACfhB,OAAOW,WAAa,KAAqB,cAAdF,EAAMG,KACxCC,KAAKC,UAAUC,IAAI,iBACZf,OAAOW,WAAa,KAAqB,cAAdF,EAAMG,MACxCC,KAAKC,UAAUE,OAAO,gBAE9B,CAbmB,CAAC,aAAc,aAAc,aAAc,YAenDU,SAAQC,GAAKG,EAAWJ,SAAQE,GAAQA,EAAK3B,iBAAiB0B,EAAGnB,MAChF,CFVIuB,EAAa,G","sources":["webpack://cv/./src/assets/js/index.js","webpack://cv/./src/assets/js/modules/nav.js","webpack://cv/./src/assets/js/modules/option.js"],"sourcesContent":["import './../sass/style.scss';\r\nimport { nav } from './modules/nav';\r\nimport { optionHover } from './modules/option';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // HEADER NAVIGATION \r\n    nav();\r\n    optionHover();\r\n});","\r\nfunction nav() {\r\n    const nav = document.querySelector('.nav');\r\n    const burger = document.querySelector('.header-burger');\r\n    const navItems = document.querySelectorAll('.nav__list-item');\r\n    const eventTypes = ['mouseenter', 'mouseleave', 'touchstart', 'touchend'];\r\n\r\n    function hoverSubNav(event) {\r\n        event.stopPropagation();\r\n        if (window.innerWidth <= 768 && event.type == 'touchstart') {\r\n            this.classList.add('nav__list-item--hover');\r\n        } else if (window.innerWidth <= 768 && event.type == 'touchend') {\r\n            this.classList.remove('nav__list-item--hover');\r\n        } else if (window.innerWidth > 768 && event.type == 'mouseenter') {\r\n            this.classList.add('nav__list-item--hover');\r\n        } else if (window.innerWidth > 768 && event.type == 'mouseleave') {\r\n            this.classList.remove('nav__list-item--hover');\r\n        }\r\n    };\r\n\r\n    eventTypes.forEach(e => navItems.forEach(item => item.addEventListener(e, hoverSubNav)));\r\n\r\n    function bodyScrollLock() {\r\n        document.body.classList.toggle('scroll--lock');\r\n    }\r\n\r\n    function toggleNavMenu() {\r\n        nav.style.transition = '0.3s';\r\n        nav.classList.toggle('nav--open');\r\n        let timer = setTimeout(() => {\r\n            nav.style.transition = '0s';\r\n            clearTimeout(timer);\r\n        }, 100);\r\n    }\r\n\r\n\r\n    function burgerHandler(event) {\r\n        event.stopPropagation();\r\n        burger.classList.toggle('header-burger--hover');\r\n        bodyScrollLock();\r\n        toggleNavMenu();\r\n    }\r\n\r\n\r\n    burger.addEventListener('click', burgerHandler);\r\n    window.addEventListener('resize', (event) => {\r\n        if (nav.classList.contains('nav--open')) {\r\n            burgerHandler(event);\r\n        }\r\n    });\r\n}\r\n\r\nexport { nav };","function optionHover() {\r\n    const optionList = document.querySelectorAll('.option ');\r\n    const eventTypes = ['mouseenter', 'mouseleave', 'touchstart', 'touchend'];\r\n\r\n    function hoverSubNav(event) {\r\n        event.stopPropagation();\r\n        if (window.innerWidth <= 768 && event.type == 'touchstart') {\r\n            this.classList.add('option--hover');\r\n        } else if (window.innerWidth <= 768 && event.type == 'touchend') {\r\n            this.classList.remove('option--hover');\r\n        } else if (window.innerWidth > 768 && event.type == 'mouseenter') {\r\n            this.classList.add('option--hover');\r\n        } else if (window.innerWidth > 768 && event.type == 'mouseleave') {\r\n            this.classList.remove('option--hover');\r\n        }\r\n    };\r\n\r\n    eventTypes.forEach(e => optionList.forEach(item => item.addEventListener(e, hoverSubNav)));\r\n}\r\n\r\nexport { optionHover };"],"names":["window","addEventListener","nav","document","querySelector","burger","navItems","querySelectorAll","hoverSubNav","event","stopPropagation","innerWidth","type","this","classList","add","remove","burgerHandler","toggle","body","style","transition","timer","setTimeout","clearTimeout","toggleNavMenu","forEach","e","item","contains","optionList","optionHover"],"sourceRoot":""}